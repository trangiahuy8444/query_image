(reltr2)➜  neo4j git:(main) ✗ python metrics.py
Using device: cpu
/Users/huytran/miniforge3/envs/reltr2/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/Users/huytran/miniforge3/envs/reltr2/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Model loaded on CPU

Evaluating sample images...

Processing image: 150542
Predicting on cpu
Image size: (1024, 678)
Input tensor shape: torch.Size([1, 3, 800, 1208])
Model outputs keys: dict_keys(['pred_logits', 'pred_boxes', 'sub_logits', 'sub_boxes', 'obj_logits', 'obj_boxes', 'rel_logits'])
Probas shapes: rel=torch.Size([200, 51]), sub=torch.Size([200, 151]), obj=torch.Size([200, 151])
Number of predictions kept: 9
Bbox shapes: sub=torch.Size([9, 4]), obj=torch.Size([9, 4])
Number of top-k predictions: 9
Prediction: train - on - track
Prediction: sign - on - train
Prediction: window - on - train
Prediction: track - under - train
Prediction: windshield - on - train
Prediction: wire - above - train
Prediction: sign - on - pole
Prediction: door - on - train
Prediction: rock - near - track
Total predictions: 9
Number of predictions: 9
Predictions:
train -[on]-> track
sign -[on]-> train
window -[on]-> train
track -[under]-> train
windshield -[on]-> train
wire -[above]-> train
sign -[on]-> pole
door -[on]-> train
rock -[near]-> track

Number of ground truth relationships: 0
Ground truth relationships:

Metrics for this image:
{
    "Precision": 0.0,
    "Recall": 0,
    "F1 Score": 0,
    "AUC-ROC": 0.0,
    "Average Precision": 0.0,
    "True Positives": 0,
    "False Positives": 9,
    "False Negatives": 0
}

Processing image: 286068
Predicting on cpu
Image size: (612, 612)
Input tensor shape: torch.Size([1, 3, 800, 800])
Model outputs keys: dict_keys(['pred_logits', 'pred_boxes', 'sub_logits', 'sub_boxes', 'obj_logits', 'obj_boxes', 'rel_logits'])
Probas shapes: rel=torch.Size([200, 51]), sub=torch.Size([200, 151]), obj=torch.Size([200, 151])
Number of predictions kept: 15
Bbox shapes: sub=torch.Size([15, 4]), obj=torch.Size([15, 4])
Number of top-k predictions: 10
Prediction: ski - on - snow
Prediction: man - wearing - pant
Prediction: man - wearing - jacket
Prediction: pant - on - man
Prediction: man - has - hand
Prediction: man - on - ski
Prediction: track - on - snow
Prediction: pole - in - hand
Prediction: man - on - snow
Prediction: fence - in - snow
Total predictions: 10
Number of predictions: 10
Predictions:
ski -[on]-> snow
man -[wearing]-> pant
man -[wearing]-> jacket
pant -[on]-> man
man -[has]-> hand
man -[on]-> ski
track -[on]-> snow
pole -[in]-> hand
man -[on]-> snow
fence -[in]-> snow

Number of ground truth relationships: 0
Ground truth relationships:

Metrics for this image:
{
    "Precision": 0.0,
    "Recall": 0,
    "F1 Score": 0,
    "AUC-ROC": 0.0,
    "Average Precision": 0.0,
    "True Positives": 0,
    "False Positives": 10,
    "False Negatives": 0
}

Processing image: 498377
Predicting on cpu
Image size: (700, 470)
Input tensor shape: torch.Size([1, 3, 800, 1191])
Model outputs keys: dict_keys(['pred_logits', 'pred_boxes', 'sub_logits', 'sub_boxes', 'obj_logits', 'obj_boxes', 'rel_logits'])
Probas shapes: rel=torch.Size([200, 51]), sub=torch.Size([200, 151]), obj=torch.Size([200, 151])
Number of predictions kept: 22
Bbox shapes: sub=torch.Size([22, 4]), obj=torch.Size([22, 4])
Number of top-k predictions: 10
Prediction: plane - has - tail
Prediction: plane - has - door
Prediction: tail - of - plane
Prediction: plane - has - wing
Prediction: plane - has - wheel
Prediction: engine - of - plane
Prediction: wing - of - plane
Prediction: plane - has - engine
Prediction: nose - of - plane
Prediction: door - on - plane
Total predictions: 10
Number of predictions: 10
Predictions:
plane -[has]-> tail
plane -[has]-> door
tail -[of]-> plane
plane -[has]-> wing
plane -[has]-> wheel
engine -[of]-> plane
wing -[of]-> plane
plane -[has]-> engine
nose -[of]-> plane
door -[on]-> plane

Number of ground truth relationships: 0
Ground truth relationships:

Metrics for this image:
{
    "Precision": 0.0,
    "Recall": 0,
    "F1 Score": 0,
    "AUC-ROC": 0.0,
    "Average Precision": 0.0,
    "True Positives": 0,
    "False Positives": 10,
    "False Negatives": 0
}
(reltr2)➜  neo4j git:(main) ✗ 